// <auto-generated />
using ClassManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using System;

namespace ClassManagementSystem.Migrations
{
    [DbContext(typeof(CrmsContext))]
    [Migration("20171210174011_INIT")]
    partial class INIT
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("ClassManagementSystem.Models.School", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("BIGINT(20)")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Name")
                        .HasColumnName("school_name")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Province")
                        .HasColumnName("province")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<DateTime>("gmt_create")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("gmt_modified")
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("ClassManagementSystem.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("BIGINT(20)");

                    b.Property<string>("Avatar")
                        .HasColumnName("icon")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("Gender")
                        .HasColumnName("is_male")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("Name")
                        .HasColumnName("user_name")
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnName("number")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Password")
                        .HasColumnName("user_password")
                        .HasColumnType("VARCHAR(16)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnName("phone_number")
                        .HasColumnType("CHAR(11)");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("VARCHAR(11)");

                    b.Property<int>("Type")
                        .HasColumnName("is_male")
                        .HasColumnType("TINYINT(1)");

                    b.Property<string>("UnionId")
                        .IsRequired()
                        .HasColumnName("wechat_id")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<DateTime>("gmt_create")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("gmt_modified")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long?>("school_id");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");


                    b.HasAlternateKey("Number");


                    b.HasAlternateKey("Phone");


                    b.HasAlternateKey("UnionId");

                    b.HasIndex("school_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassManagementSystem.Models.User", b =>
                {
                    b.HasOne("ClassManagementSystem.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("school_id");
                });
#pragma warning restore 612, 618
        }
    }
}
